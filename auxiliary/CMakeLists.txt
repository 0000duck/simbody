SET(AUX_SHARED_TARGET ${SIMBODY_LIBRARY_NAME}_aux)
SET(AUX_STATIC_TARGET ${SIMBODY_LIBRARY_NAME}_aux_static)

IF (UNIX AND CMAKE_BUILD_TYPE MATCHES Debug)
    SET(AUX_SHARED_TARGET ${AUX_SHARED_TARGET}_d)
    SET(AUX_STATIC_TARGET ${AUX_STATIC_TARGET}_d)
ENDIF (UNIX AND CMAKE_BUILD_TYPE MATCHES Debug)

INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/include)

FILE(GLOB_RECURSE AUX_SOURCE_FILES ${PROJECT_SOURCE_DIR}/auxiliary/src/*.cpp )
FILE(GLOB_RECURSE AUX_INCLUDE_FILES ${PROJECT_SOURCE_DIR}/auxiliary/src/*.h 
${PROJECT_SOURCE_DIR}/auxiliary/include/*.h )


## Find VTK
SET(VTK_VERSION 5.0               CACHE STRING "VTK version to use")
SET(VTK_DIR     ${SimTK_SDK}/core CACHE PATH   "VTK installation directory")


SET(VTK_INCLUDE_DIR ${VTK_DIR}/include/vtk-${VTK_VERSION})
SET(VTK_LIB_DIR     ${VTK_DIR}/lib/vtk-${VTK_VERSION})

INCLUDE_DIRECTORIES(${VTK_INCLUDE_DIR})
LINK_DIRECTORIES(${VTK_LIB_DIR})

SET(VTK_LIBS_TO_USE
     vtkHybrid
     vtkFiltering
     vtkGenericFiltering
     vtkVolumeRendering
     vtkRendering
     vtkIO
     vtkGraphics
     vtkCommon
)

ADD_SUBDIRECTORY(staticTarget)
ADD_SUBDIRECTORY(sharedTarget)

IF (BUILD_TESTING)
    ADD_SUBDIRECTORY(tests)
ENDIF (BUILD_TESTING)

IF (BUILD_EXAMPLES)
    ADD_SUBDIRECTORY(examples)
ENDIF (BUILD_EXAMPLES)

