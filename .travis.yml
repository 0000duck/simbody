# This script is used by the Travis-CI (continuous integration) testing
# framework to run Simbody's tests with every GitHub push or pull-request.
language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  # Each line is a separate build in the build matrix. A build in the build
  # matrix is defined by the environment variables defined on the line, which
  # should be space-delimited. For example,
  # - ABC=ON DEF=OFF GHI=ON
  # Simbody 3.6 and up requires c++11
  - BTYPE=Release
  
matrix:
  exclude:
    - os: osx
      compiler: gcc

before_install:
  ## Ensure that there are no tabs in source code.
  # GREP returns 0 (true) if there are any matches, and
  # we don't want any matches. If there are matches,
  # print a helpful message, and make the test fail by using "false".
  # The GREP command here checks for any tab characters in the the files
  # that match the specified pattern. GREP does not pick up explicit tabs
  # (e.g., literally a \t in a source file).
  # This grep command is invalid on osx.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if grep --recursive --include={*.cpp,*.c,*.h,*.md,*.yml,*.cmake.*.xml,*.html,*.in,*.txt} -P "\t" . ; then echo "Tabs found in the lines shown above. See CONTRIBUTING.md about tabs."; false; else echo "Repo passed no-tabs check."; fi; else echo "No-tabs check not performed."; fi
  
  ## Dependencies for Simbody.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install liblapack-dev; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install freeglut3-dev libxi-dev libxmu-dev; fi

  # C++11 on Ubuntu. Update to gcc 4.8, which provides full C++11 support.  We
  # use this script because if building Simbody with C++11, we need gcc-4.8,
  # and the Travis Ubuntu 12.04 machines have an older version of gcc. Even if
  # building with Clang, we need the newer libstdc++ that we get by updating to
  # gcc-4.8.  See https://github.com/travis-ci/travis-ci/issues/979.
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get update -qq; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq g++-4.8; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$CXX" = "g++" ]]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  
  # CMake 2.8.11 on Ubuntu.
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:kalakris/cmake -y; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get update -qq; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install cmake; fi

install:
  - mkdir ~/simbody-build && cd ~/simbody-build
  # Configure.
  - cmake $TRAVIS_BUILD_DIR -DCMAKE_BUILD_TYPE=$BTYPE -DCMAKE_CXX_FLAGS=-Werror -DCMAKE_INSTALL_PREFIX=~/simbody
  # Build.
  - make -j8

script:
  ## Test Simbody.
  - ctest -j8 --output-on-failure

  ## Make sure we can install with no issues.
  - make -j8 install

  # Zip up the installation using a file name that identifies where
  # the binaries were built.
  - mkdir ~/binstar-packages
  - ZIPNAME=simbody-latest_$TRAVIS_OS_NAME.zip
  - # Zip up simbody relative to the home directory; must change to home dir.
  - cd ~
  - zip --recurse-paths --quiet ~/binstar-packages/$ZIPNAME simbody

  # Paths in the .bintray.json file are relative to the current directory.
  - cd ~

deploy:
  # Uploads to https://bintray.com/chrisdembia/opensim-testing/simbody/view
  #            https://dl.bintray.com/chrisdembia/opensim-testing/
  # See http://docs.travis-ci.com/user/deployment/bintray/ for help.
  provider: bintray
  file: $TRAVIS_BUILD_DIR/doc/.bintray.json
  user: chrisdembia
  skip_cleanup: true
  # API key is encrypted with travis.
  key:
    secure: MOCuM6THnBR82ClEmWFmqVM/GEiNtimz7dMmWUnmgU4gWAU9DBq0OelifQ6XAAhEqZGz0IbVyRo+zDGWRUEC/EIAb9PhTSg6W/XX+zykAQCsIr3BMvOE6v5MXNz/JMFKxZoFmmrL1WR4a4KUOQANr7derYkIZUy/9CnUkJgQGKE=
  on:
    # Upload for both linux and OSX. 
    branch: master
    condition: "$CC = clang"
